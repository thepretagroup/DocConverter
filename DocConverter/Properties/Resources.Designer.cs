//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DocConverter.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DocConverter.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Laboratory results represent only one part of the overall determination of therapy for patients and do not guarantee outcomes nor indicate the specific drugs that should be used in a particular patient..
        /// </summary>
        internal static string DataAnalysis {
            get {
                return ResourceManager.GetString("DataAnalysis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to * The following compounds serve as in vitro surrogates for their respective drug classes, e.g., Cytoxan: = Cyclophosphamide, Ifosfamide, Melphalan, Chlorambucil and related mustard alkylators; Cisplatin: = Carboplatin; Doxorubicin: = Daunorubicin and Idarubicin; Trimetrexate: = Methotrexate; 5Fu + Interferon: = Xeloda.
        /// </summary>
        internal static string DataAnalysisNote {
            get {
                return ResourceManager.GetString("DataAnalysisNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ex Vivo best regimen (EVBR®) would be.
        /// </summary>
        internal static string ExVivoHeader {
            get {
                return ResourceManager.GetString("ExVivoHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INTERPRETATION:.
        /// </summary>
        internal static string InterpretationHeader {
            get {
                return ResourceManager.GetString("InterpretationHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Logo_Nagourney_Cancer_Institute {
            get {
                object obj = ResourceManager.GetObject("Logo_Nagourney_Cancer_Institute", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MULTIPLE DRUG DOSE EFFECT ANALYSIS.
        /// </summary>
        internal static string MultiDoseEffectHeader {
            get {
                return ResourceManager.GetString("MultiDoseEffectHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EVA-PCD FUNCTIONAL PROFILE.
        /// </summary>
        internal static string ReportHeader {
            get {
                return ResourceManager.GetString("ReportHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Robert A. Nagourney, MD
        ///Laboratory and Medical Director
        ///Nagourney Cancer Institute.
        /// </summary>
        internal static string SignatureBlock {
            get {
                return ResourceManager.GetString("SignatureBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SINGLE DRUG DOSE EFFECT ANALYSIS.
        /// </summary>
        internal static string SingleDoseEffectHeader {
            get {
                return ResourceManager.GetString("SingleDoseEffectHeader", resourceCulture);
            }
        }
    }
}
